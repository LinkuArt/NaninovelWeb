(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{194:function(e,a,t){"use strict";t.r(a);var r=t(20),o=Object(r.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Characters")]),e._v(" "),t("p",[e._v("Characters are novel actors used to represent scene entities that are placed on top of the "),t("router-link",{attrs:{to:"/guide/backgrounds.html"}},[e._v("backgrounds")]),e._v(".")],1),e._v(" "),t("p",[e._v("A character actor is defined with a name, appearance, visibility, transform (position, rotation, scale) and look direction. It can change appearance, visibility, transform and look direction over time.")]),e._v(" "),t("p",[e._v("Characters' behavior can be configured using "),t("code",[e._v("Naninovel -> Configuration -> Characters")]),e._v(" context menu; for available options see "),t("router-link",{attrs:{to:"/guide/configuration.html#characters"}},[e._v("configuration guide")]),e._v(". The characters' resources manager can be accessed using "),t("code",[e._v("Naninovel -> Resources -> Characters")]),e._v(" context menu.")],1),e._v(" "),t("p",[t("img",{attrs:{src:"/guide/add-character.png",alt:"Add Character"}})]),e._v(" "),t("p",[e._v("In novel scripts, characters are mostly controlled with "),t("router-link",{attrs:{to:"/api/#char"}},[t("code",[e._v("@char")])]),e._v(" action:")],1),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("; Shows character with name `Sora` with a default appearance.\n@char Sora\n\n; Same as above, but sets appearance to `Happy`.\n@char Sora.Happy\n\n; Same as above, but also positions the character 45% away from the left border\n; of the screen and 10% away from the bottom border; also makes him look to the left.\n@char Sora.Happy look:left pos:0.45,0.1\n")])])]),t("h2",{attrs:{id:"display-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#display-name","aria-hidden":"true"}},[e._v("#")]),e._v(" Display Name")]),e._v(" "),t("p",[e._v("In the character configuration you can set a "),t("code",[e._v("Display Name")]),e._v(" for specific characters. When set, display name will be shown in the printer name label UI, instead of the character's ID. This allows using compound character names, that contains spaces and special characters (which is not allowed for IDs).")]),e._v(" "),t("p",[e._v('For localization, use "CharacterNames" '),t("a",{attrs:{href:"/guide/managed-text"}},[e._v("managed text")]),e._v(' document, which is automatically created when running generate managed text resources task. Be aware, that "CharacterNames" document will override '),t("code",[e._v("Display Name")]),e._v(" value when defined for the default locale.")]),e._v(" "),t("h2",{attrs:{id:"character-color"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#character-color","aria-hidden":"true"}},[e._v("#")]),e._v(" Character Color")]),e._v(" "),t("p",[e._v("When "),t("code",[e._v("Use Character Color")]),e._v(" is enabled in the character configuration, printer text messages and name labels will be tinted in the specified colors when the corresponding character ID is specified in a "),t("router-link",{attrs:{to:"/api/#print"}},[t("code",[e._v("@print")])]),e._v(" action or generic text line.")],1),e._v(" "),t("p",[e._v("The following video demonstrates how to use display names and character colors.")]),e._v(" "),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/u5B5s-X2Bw0",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),e._v(" "),t("h2",{attrs:{id:"sprite-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sprite-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Sprite Characters")]),e._v(" "),t("p",[e._v("Sprite implementation of the character actors is the most common and simple one; it uses a set of "),t("a",{attrs:{href:"https://docs.unity3d.com/Manual/Sprites",target:"_blank",rel:"noopener noreferrer"}},[e._v("sprite"),t("OutboundLink")],1),e._v(" assets to represent appearances of the character. The source of the sprites could be "),t("code",[e._v(".png")]),e._v(" or "),t("code",[e._v(".jpg")]),e._v(" image files.")]),e._v(" "),t("p",[e._v("Sprite character appearance assets can be either managed by editor GUI or placed in a "),t("code",[e._v("Resources/Characters/CharacterName")]),e._v(" folder, "),t("code",[e._v("CharacterName")]),e._v(" being the name of the character, for an automatic exposure.")]),e._v(" "),t("h2",{attrs:{id:"diced-sprite-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diced-sprite-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Diced Sprite Characters")]),e._v(" "),t("p",[e._v("Implemented via an open source (MIT license) third-party package "),t("a",{attrs:{href:"https://github.com/Elringus/SpriteDicing",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpriteDicing"),t("OutboundLink")],1),e._v(" used to optimize build size and texture memory by reusing source sprite textures of the characters.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/af08d141e7a08b6a8e2ef60c07332bbf.png",alt:"Sprite Dicing"}})]),e._v(" "),t("p",[e._v("In order to be able to choose this implementation you have to install "),t("a",{attrs:{href:"https://github.com/Elringus/NaninovelSpriteDicing/raw/master/NaninovelSpriteDicing.unitypackage",target:"_blank",rel:"noopener noreferrer"}},[e._v("NaninovelSpriteDicing extension package"),t("OutboundLink")],1),e._v(". The extension package contains character implementation scripts and has "),t("a",{attrs:{href:"https://github.com/Elringus/SpriteDicing",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpriteDicing"),t("OutboundLink")],1),e._v(' bundled inside "ThirdParty" folder.')]),e._v(" "),t("p",[t("code",[e._v("DicedSpriteAtlas")]),e._v(" assets containing character appearances are used as the resources for the diced sprite characters. Each appearance is mapped by name to the diced sprites contained in the atlas.")]),e._v(" "),t("p",[e._v("Note, that diced characters implementation currently doesn't support animated appearance changes (they're changed instantly).")]),e._v(" "),t("p",[e._v("The following video guide covers creating and configuring diced sprite atlas, adding new diced character based on the created atlas and controlling the character from a novel script.")]),e._v(" "),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/6PdOAOsnhio",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),e._v(" "),t("h2",{attrs:{id:"animated-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#animated-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Animated Characters")]),e._v(" "),t("p",[e._v("Animated characters is the most flexible characters actor implementation. It's based on a prefab with an "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator",target:"_blank",rel:"noopener noreferrer"}},[e._v("animator"),t("OutboundLink")],1),e._v(" component attached to the root object. Appearance changes are routed to the animator component as "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),t("OutboundLink")],1),e._v(" commands appearance being the trigger name. You're free to implement the behavior of the underlying object. For example, you can use a 3D rigged character model and route the appearance changes to the corresponding rig animations.")]),e._v(" "),t("p",[e._v("Animated characters can only be managed by editor GUI.")]),e._v(" "),t("h2",{attrs:{id:"live2d-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#live2d-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Live2D Characters")]),e._v(" "),t("p",[e._v("Live2D character implementation uses assets created with "),t("a",{attrs:{href:"https://www.live2d.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D Cubism"),t("OutboundLink")],1),e._v(" 2D modeling and animation software.")]),e._v(" "),t("p",[e._v("In order to be able to use this implementation you have to first install "),t("a",{attrs:{href:"https://live2d.github.io/#unity",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D Cubism SDK for Unity"),t("OutboundLink")],1),e._v(". Consult official Live2D docs for the installation and usage instructions.")]),e._v(" "),t("p",[e._v("Then install "),t("a",{attrs:{href:"https://github.com/Elringus/NaninovelLive2D/raw/master/NaninovelLive2D.unitypackage",target:"_blank",rel:"noopener noreferrer"}},[e._v("NaninovelLive2D extension package"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Live2D model prefab used as the resource for the implementation should have a "),t("code",[e._v("Naninovel.Live2DController")]),e._v(" component attached to the root object. Appearance changes are routed to the animator component as "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),t("OutboundLink")],1),e._v(' commands appearance being the trigger name. Eg, if you have a "Kaori" Live2D character prefab and want to invoke a trigger with name "Surprise", use the following action:')]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@char Kaori.Surprise\n")])])]),t("p",[e._v("Note, that the above action will only attempt to invoke a "),t("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),t("OutboundLink")],1),e._v(' with "Surprise" argument on the animator controller attached to the prefab; you have to compose underlying animator state machine yourself.')]),e._v(" "),t("p",[e._v("Look direction can optionally be controlled via Live2D's "),t("code",[e._v("CubismLookController")]),e._v(" (can be disabled via "),t("code",[e._v("Control Look")]),e._v(" field of the "),t("code",[e._v("Naninovel.Live2DController")]),e._v(" component).")]),e._v(" "),t("p",[e._v("Be aware, that "),t("code",[e._v("Naninovel.Live2DController")]),e._v(' expects a "Drawables" gameobject inside the Live2D model prefab (created automatically when importing Live2D models to Unity); the controller will scale this gameobject at runtime in correspondence with "scale" parameter of the '),t("code",[e._v("@char")]),e._v(" actions. Hence, any local scale values set in the editor will be ignored. To set an initial scale for the Live2D prefabs, please use scale of the parent gameobject as "),t("a",{attrs:{href:"https://youtu.be/rw_Z69z0pAg?t=353",target:"_blank",rel:"noopener noreferrer"}},[e._v("shown in the video guide"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v('When Live2D extension is installed a "Live2D" item will appear in the Naninovel configuration menu providing following options:')]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.gyazo.com/435a4824f0ce0dd8c9c3f29d457bab24.png",alt:""}})]),e._v(" "),t("p",[e._v('Render layer specifies the layer to apply for the Live2D prefabs and culling mask to use for the cameras that will render the prefabs. Render camera field allows to use a custom setup for the render camera (the default render camera is stored inside the packages "Prefabs" folder). Camera offset allows to offset the render camera from the rendered prefab; you can use this parameters to uniformly position all the Live2D prefabs relative to the camera.')]),e._v(" "),t("p",[e._v("The following video guide covers exporting a Live2D character from Cubism Editor, configuring the prefab, creating a simple animator state machine and controlling the character from a novel script.")]),e._v(" "),t("div",{staticClass:"video-container"},[t("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/rw_Z69z0pAg",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})])])},[],!1,null,null,null);o.options.__file="characters.md";a.default=o.exports}}]);